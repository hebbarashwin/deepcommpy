Search.setIndex({"docnames": ["channels", "crisp", "examples", "index", "nams", "tinyturbo"], "filenames": ["channels.rst", "crisp.rst", "examples.rst", "index.rst", "nams.rst", "tinyturbo.rst"], "titles": ["Channels", "CRISP Module", "Examples", "Welcome to deepcommpy\u2019s documentation!", "NAMS Module", "TinyTurbo Module"], "terms": {"defin": [0, 1, 5], "model": [0, 1, 5], "commun": [0, 5], "system": 0, "custom": 0, "can": 0, "inherit": 0, "from": [0, 2, 5], "class": [0, 1, 5], "deepcommpi": [0, 1, 2, 5], "noise_typ": 0, "awgn": [0, 2], "ad": 0, "nois": [0, 1, 2], "input": [0, 1, 5], "signal": [0, 1], "str": [0, 5], "type": [0, 5], "valid": 0, "valu": 0, "ar": [0, 1, 5], "fade": [0, 2], "radar": [0, 2], "t": [0, 2], "dist": [0, 2], "epa": [0, 2], "eva": [0, 2], "etu": [0, 2], "__init__": [0, 1, 5], "corrupt_sign": [0, 2], "input_sign": 0, "sigma": [0, 2], "1": [0, 2, 5], "0": [0, 1, 2, 5], "vv": 0, "5": [0, 2], "radar_pow": 0, "20": 0, "radar_prob": 0, "05": 0, "corrupt": [0, 1], "torch": [0, 1, 2, 5], "tensor": [0, 1, 5], "float": [0, 1, 2], "standard": 0, "deviat": 0, "option": [0, 1, 5], "degre": 0, "freedom": 0, "distribut": 0, "power": 0, "probabl": 0, "corrupted_sign": 0, "thi": [1, 2, 5], "provid": [1, 2, 5], "an": [1, 2, 5], "interfac": [1, 5], "python": [1, 5], "perform": [1, 5], "polar": 1, "encod": [1, 2, 5], "decod": [1, 2, 4, 5], "us": [1, 2, 5], "success": 1, "cancel": 1, "well": [1, 5], "cnn": 1, "rnn": 1, "polarcod": 1, "n": 1, "k": [1, 5], "f": 1, "none": [1, 5], "r": 1, "infti": 1, "1000": 1, "turbo": [1, 2, 5], "code": [1, 2, 5], "object": [1, 2, 5], "includ": [1, 5], "int": [1, 5], "block": [1, 5], "length": [1, 5], "messag": [1, 2, 5], "list": [1, 5], "frozen": 1, "bit": [1, 2, 5], "posit": 1, "reliabl": 1, "sequenc": 1, "larg": 1, "number": [1, 5], "infin": 1, "crisp_cnn_decod": 1, "y": [1, 5], "net": 1, "receiv": [1, 5], "shape": [1, 5], "batch_siz": [1, 5], "nn": [1, 5], "If": [1, 5], "default": [1, 5], "i": [1, 5], "avail": 1, "64": 1, "22": 1, "should": [1, 5], "store": 1, "cnn_n": 1, "_k": 1, "pt": 1, "The": 1, "checkpoint": 1, "have": 1, "kei": 1, "model_state_dict": 1, "config": [1, 5], "crisp_rnn_decod": 1, "gru": 1, "rnn_n": 1, "custom_info_posit": 1, "plotkin": 1, "method": [1, 2, 5], "batch": 1, "inform": 1, "info": 1, "sc_decod": 1, "corrupted_codeword": 1, "snr": [1, 2], "codeword": [1, 5], "ratio": 1, "db": 1, "decoded_bit": [1, 5], "rnn_model": 1, "dict": [1, 5], "dictionari": [1, 5], "contain": [1, 5], "configur": [1, 5], "sampl": 1, "initi": [1, 5], "intern": [1, 5], "state": [1, 5], "share": [1, 5], "both": [1, 5], "scriptmodul": [1, 5], "forward": [1, 5], "hidden": 1, "fy": 1, "comput": [1, 2, 5], "everi": [1, 5], "call": [1, 5], "overridden": [1, 5], "all": [1, 5], "subclass": [1, 5], "although": [1, 5], "recip": [1, 5], "pass": [1, 5], "need": [1, 5], "within": [1, 5], "one": [1, 5], "instanc": [1, 5], "afterward": [1, 5], "instead": [1, 5], "sinc": [1, 5], "former": [1, 5], "take": [1, 5], "care": [1, 5], "run": [1, 5], "regist": [1, 5], "hook": [1, 5], "while": [1, 5], "latter": [1, 5], "silent": [1, 5], "ignor": [1, 5], "them": [1, 5], "convnet": 1, "noisy_enc": 1, "crisp_rnn_test": 1, "devic": [1, 5], "test": [1, 2, 5], "exampl": [1, 3, 5], "eg": [1, 5], "cuda": [1, 5], "cpu": [1, 5], "crisp_rnn": 1, "test_config": [1, 5], "json": [1, 5], "crisp_cnn_test": 1, "crisp_cnn": 1, "page": [2, 3], "usag": 2, "modul": [2, 3], "here": 2, "": [2, 5], "how": 2, "import": 2, "util": 2, "snr_db2sigma": 2, "channel": [2, 3], "creat": 2, "lte": [2, 5], "block_length": 2, "40": [2, 5], "block_len": [2, 5], "turbocod": [2, 5], "support": [2, 5], "follow": 2, "It": 2, "also": 2, "matlab": 2, "depend": 2, "gener": 2, "random": [2, 5], "message_bit": [2, 5], "randint": 2, "2": [2, 5], "10000": 2, "dtype": 2, "bpsk": 2, "simul": [2, 5], "over": 2, "rang": 2, "snr_rang": 2, "add": 2, "noisy_cod": 2, "received_llr": [2, 5], "max": [2, 5], "log": [2, 5], "map": [2, 5], "3": [2, 5], "iter": [2, 5], "_": 2, "decoded_max": 2, "turbo_decod": [2, 5], "number_iter": [2, 5], "max_log_map": [2, 5], "6": 2, "decoded_map": 2, "decoded_tt": 2, "tinyturbo_decod": [2, 5], "error": [2, 5], "rate": [2, 5], "ber_max": 2, "ne": 2, "mean": 2, "item": 2, "ber_map": 2, "ber_tt": 2, "tinyturbo": 3, "function": 3, "crisp": 3, "nam": 3, "index": 3, "search": 3, "neural": 4, "min": 4, "sum": 4, "document": 4, "classic": 5, "interleaver_typ": 5, "qpp": 5, "interleaver_se": 5, "punctur": 5, "fals": 5, "757": 5, "seed": 5, "interleav": 5, "parallel": 5, "concaten": 5, "consist": 5, "two": 5, "systemat": 5, "convolut": 5, "compon": 5, "2d": 5, "m": 5, "stream": 5, "bool": 5, "current": 5, "onli": 5, "pattern": 5, "110101": 5, "4": 5, "memori": 5, "where": 5, "delai": 5, "element": 5, "first": 5, "sys_1": 5, "non_sys1_1": 5, "non_sys2_1": 5, "sys_j": 5, "non_sys1_j": 5, "non_sys2_j": 5, "sys_m": 5, "non_sys1_m": 5, "non_sys2_m": 5, "next": 5, "termin": 5, "sy": 5, "non_sys1": 5, "sys_term_1": 5, "non_sys1_term_1": 5, "sys_term_j": 5, "non_sys1_term_j": 5, "sys_term_m": 5, "non_sys1_term_m": 5, "sys_interleav": 5, "non_sys2": 5, "sys_inter_term_1": 5, "non_sys2_term_1": 5, "sys_inter_term_j": 5, "non_sys2_term_j": 5, "sys_inter_term_m": 5, "non_sys2_term_m": 5, "correspond": 5, "output": 5, "non": 5, "l_int": 5, "weight": 5, "llr": 5, "bcjr": 5, "algorithm": 5, "normal": 5, "paper": 5, "intrins": 5, "prior": 5, "set": 5, "zero": 5, "l_ext": 5, "belief": 5, "num_it": 5, "init_typ": 5, "ones": 5, "scale": 5, "ani": 5, "train_tinyturbo": 5, "loaded_weight": 5, "train": 5, "target": 5, "proce": 5, "like": 5, "turbonet": 5, "he": 5, "j": 5, "zhang": 5, "jin": 5, "c": 5, "wen": 5, "g": 5, "li": 5, "driven": 5, "dnn": 5, "design": 5, "experiment": 5, "result": 5, "ieee": 5, "transact": 5, "vol": 5, "68": 5, "10": 5, "pp": 5, "6127": 5, "6140": 5, "train_config": 5, "load": 5, "training_loss": 5, "loss": 5, "training_b": 5, "step": 5, "test_tinyturbo": 5}, "objects": {"deepcommpy.channels": [[0, 0, 1, "", "Channel"]], "deepcommpy.channels.Channel": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "corrupt_signal"]], "deepcommpy.crisp": [[1, 0, 1, "", "PolarCode"], [1, 0, 1, "", "RNN_Model"], [1, 0, 1, "", "convNet"], [1, 2, 1, "", "crisp_cnn_test"], [1, 2, 1, "", "crisp_rnn_test"]], "deepcommpy.crisp.PolarCode": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "crisp_cnn_decode"], [1, 1, 1, "", "crisp_rnn_decode"], [1, 1, 1, "", "encode"], [1, 1, 1, "", "sc_decode"]], "deepcommpy.crisp.RNN_Model": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "forward"]], "deepcommpy.crisp.convNet": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "forward"]], "deepcommpy.tinyturbo": [[5, 0, 1, "", "TinyTurbo"], [5, 0, 1, "", "TurboCode"], [5, 2, 1, "", "test_tinyturbo"], [5, 2, 1, "", "train_tinyturbo"]], "deepcommpy.tinyturbo.TinyTurbo": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "forward"]], "deepcommpy.tinyturbo.TurboCode": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "encode"], [5, 1, 1, "", "tinyturbo_decode"], [5, 1, 1, "", "turbo_decode"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"channel": 0, "function": [0, 1, 5], "paramet": [0, 1, 5], "return": [0, 1, 5], "crisp": 1, "modul": [1, 4, 5], "exampl": 2, "tinyturbo": [2, 5], "welcom": 3, "deepcommpi": 3, "": 3, "document": 3, "content": 3, "indic": 3, "tabl": 3, "nam": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Channels": [[0, "channels"]], "Functions": [[0, "functions"], [1, "functions"], [5, "functions"]], "Parameters": [[0, "parameters"], [0, "id1"], [1, "parameters"], [1, "id1"], [1, "id2"], [1, "id3"], [1, "id4"], [1, "id5"], [1, "id6"], [1, "id7"], [1, "id8"], [5, "parameters"], [5, "id1"], [5, "id3"], [5, "id5"], [5, "id7"]], "Returns": [[0, "returns"], [1, "returns"], [5, "returns"], [5, "id2"], [5, "id4"], [5, "id6"]], "CRISP Module": [[1, "crisp-module"]], "Examples": [[2, "examples"]], "TinyTurbo Example": [[2, "tinyturbo-example"]], "Welcome to deepcommpy\u2019s documentation!": [[3, "welcome-to-deepcommpy-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "NAMS Module": [[4, "nams-module"]], "TinyTurbo Module": [[5, "tinyturbo-module"]]}, "indexentries": {"channel (class in deepcommpy.channels)": [[0, "deepcommpy.channels.Channel"]], "__init__() (deepcommpy.channels.channel method)": [[0, "deepcommpy.channels.Channel.__init__"]], "corrupt_signal() (deepcommpy.channels.channel method)": [[0, "deepcommpy.channels.Channel.corrupt_signal"]], "polarcode (class in deepcommpy.crisp)": [[1, "deepcommpy.crisp.PolarCode"]], "rnn_model (class in deepcommpy.crisp)": [[1, "deepcommpy.crisp.RNN_Model"]], "__init__() (deepcommpy.crisp.polarcode method)": [[1, "deepcommpy.crisp.PolarCode.__init__"]], "__init__() (deepcommpy.crisp.rnn_model method)": [[1, "deepcommpy.crisp.RNN_Model.__init__"]], "__init__() (deepcommpy.crisp.convnet method)": [[1, "deepcommpy.crisp.convNet.__init__"]], "convnet (class in deepcommpy.crisp)": [[1, "deepcommpy.crisp.convNet"]], "crisp_cnn_decode() (deepcommpy.crisp.polarcode method)": [[1, "deepcommpy.crisp.PolarCode.crisp_cnn_decode"]], "crisp_cnn_test() (in module deepcommpy.crisp)": [[1, "deepcommpy.crisp.crisp_cnn_test"]], "crisp_rnn_decode() (deepcommpy.crisp.polarcode method)": [[1, "deepcommpy.crisp.PolarCode.crisp_rnn_decode"]], "crisp_rnn_test() (in module deepcommpy.crisp)": [[1, "deepcommpy.crisp.crisp_rnn_test"]], "encode() (deepcommpy.crisp.polarcode method)": [[1, "deepcommpy.crisp.PolarCode.encode"]], "forward() (deepcommpy.crisp.rnn_model method)": [[1, "deepcommpy.crisp.RNN_Model.forward"]], "forward() (deepcommpy.crisp.convnet method)": [[1, "deepcommpy.crisp.convNet.forward"]], "sc_decode() (deepcommpy.crisp.polarcode method)": [[1, "deepcommpy.crisp.PolarCode.sc_decode"]], "tinyturbo (class in deepcommpy.tinyturbo)": [[5, "deepcommpy.tinyturbo.TinyTurbo"]], "turbocode (class in deepcommpy.tinyturbo)": [[5, "deepcommpy.tinyturbo.TurboCode"]], "__init__() (deepcommpy.tinyturbo.tinyturbo method)": [[5, "deepcommpy.tinyturbo.TinyTurbo.__init__"]], "__init__() (deepcommpy.tinyturbo.turbocode method)": [[5, "deepcommpy.tinyturbo.TurboCode.__init__"]], "encode() (deepcommpy.tinyturbo.turbocode method)": [[5, "deepcommpy.tinyturbo.TurboCode.encode"]], "forward() (deepcommpy.tinyturbo.tinyturbo method)": [[5, "deepcommpy.tinyturbo.TinyTurbo.forward"]], "test_tinyturbo() (in module deepcommpy.tinyturbo)": [[5, "deepcommpy.tinyturbo.test_tinyturbo"]], "tinyturbo_decode() (deepcommpy.tinyturbo.turbocode method)": [[5, "deepcommpy.tinyturbo.TurboCode.tinyturbo_decode"]], "train_tinyturbo() (in module deepcommpy.tinyturbo)": [[5, "deepcommpy.tinyturbo.train_tinyturbo"]], "turbo_decode() (deepcommpy.tinyturbo.turbocode method)": [[5, "deepcommpy.tinyturbo.TurboCode.turbo_decode"]]}})